{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-04-24 11:14:01","docid":0,"fillcolor":"ffffed99","id":1,"originaltext":"1. SpringSecurity 框架简介","page":0,"textblocks":[{"first":[90.02400207519531,320.8399963378906,9.555000305175781,15],"last":[249.5,320.8399963378906,15,15],"length":22,"rects":[[90.02400207519531,320.8399963378906,174.4759979248047,15]],"start":25,"text":"1. SpringSecurity 框架简介"}],"type":5,"uuid":"9bf8d5ac2d84640e15e92e0318239e06"},{"date":"2022-04-24 11:14:09","docid":0,"fillcolor":"ffffed99","folded":true,"id":2,"markups":[{"date":"2022-04-24 15:07:22","docid":0,"fillcolor":"ffffed99","folded":true,"id":6,"markups":[{"date":"2022-04-24 15:07:29","docid":0,"fillcolor":"ffffed99","id":7,"originaltext":"2.3.1 主体","page":9,"textblocks":[{"first":[111.9800033569336,117.67999267578125,6.726722717285156,11.5],"last":[151.8199920654297,117.67999267578125,10.55999755859375,11.5],"length":8,"rects":[[111.9800033569336,117.67999267578125,50.399986267089844,11.5]],"start":21,"text":"2.3.1 主体"}],"type":5,"uuid":"791e94e6e9ce67bd1b517d94fdffbbb2"},{"date":"2022-04-24 15:07:35","docid":0,"fillcolor":"ffffed99","id":8,"originaltext":"2.3.2 认证","page":9,"textblocks":[{"first":[111.9800033569336,238.90997314453125,6.726722717285156,11.5],"last":[151.8199920654297,238.90997314453125,10.55999755859375,11.5],"length":8,"rects":[[111.9800033569336,238.90997314453125,50.399986267089844,11.5]],"start":92,"text":"2.3.2 认证"}],"type":5,"uuid":"8e5048b1e13994ea601afd294493d202"},{"date":"2022-04-24 15:07:41","docid":0,"fillcolor":"ffffed99","id":9,"originaltext":"2.3.3 授权","page":9,"textblocks":[{"first":[111.9800033569336,388.0699768066406,6.726722717285156,11.5],"last":[151.8199920654297,388.0699768066406,10.55999755859375,11.5],"length":8,"rects":[[111.9800033569336,388.0699768066406,50.399986267089844,11.5]],"start":186,"text":"2.3.3 授权"}],"type":5,"uuid":"8440b84a3f6c69a8e2784eee4fbb558e"}],"originaltext":"2.3  权限管理中的相关概念","page":9,"textblocks":[{"first":[90.02400207519531,76.82745361328125,7.10400390625,12],"last":[221.37200927734375,76.82745361328125,12,12],"length":15,"rects":[[90.02400207519531,76.82745361328125,143.34800720214844,12]],"start":4,"text":"2.3  权限管理中的相关概念"}],"type":5,"uuid":"2d9d0d225231427a90d6953b83a315f9"},{"content":"过滤器是如何进行加载的？\n使用SpringSecurity配置过滤器\n通过DelegatingFilterProxy类进行配置，\n它是一个Filter，其中doFilter放行中会执行initDelegate方法来获取filterChain对象，其中filterChain对象就是FilterChainProxy类，也是一个Filter类，doFIlter中涉及到doFilterInternal方法，这里面会进行从容器中获取到另外的几十个Filter，然后让他们执行","date":"2022-04-24 15:08:16","docid":0,"fillcolor":"ffffed99","folded":true,"id":10,"markups":[{"date":"2022-04-24 15:08:58","docid":0,"fillcolor":"ffffed99","id":11,"originaltext":"SpringSecurity 本质是一个过滤器链","page":10,"textblocks":[{"first":[90.02400207519531,249.56997680664062,5.881919860839844,14.5],"last":[243.8753204345703,249.56997680664062,10.55999755859375,14.5],"length":24,"rects":[[90.02400207519531,249.56997680664062,164.41131591796875,14.5]],"start":32,"text":"SpringSecurity 本质是一个过滤器链"}],"type":5,"uuid":"41c4b47733c1482368eb648d712bed8a"},{"date":"2022-04-24 15:11:44","docid":0,"fillcolor":"ffffed99","folded":true,"id":12,"markups":[{"content":"方法级过滤器","date":"2022-04-24 15:11:58","docid":0,"fillcolor":"ffffed99","id":13,"originaltext":"FilterSecurityInterceptor","page":10,"textblocks":[{"first":[90.02400207519531,710.0599975585938,5.501762390136719,14.5],"last":[198.12677001953125,710.0599975585938,3.801605224609375,14.5],"length":25,"rects":[[90.02400207519531,710.0599975585938,111.90437316894531,14.5]],"start":1151,"text":"FilterSecurityInterceptor"}],"type":5,"uuid":"46f7cb09a8aaf2d7c1e88864e3e6f65b"},{"content":"异常过滤器","date":"2022-04-24 15:12:19","docid":0,"fillcolor":"ffffed99","id":15,"originaltext":"ExceptionTranslationFilter","page":11,"textblocks":[{"first":[90.02400207519531,343.7699890136719,5.924163818359375,14.5],"last":[205.434326171875,343.7699890136719,3.801605224609375,14.5],"length":26,"rects":[[90.02400207519531,343.7699890136719,119.21192932128906,14.5]],"start":130,"text":"ExceptionTranslationFilter"}],"type":5,"uuid":"791baaba1557b9fde19efff0a12b38bc"},{"content":"用户名密码认证过滤器，其中的父类有定义当认证成功调用的方法，以及认证失败需要调用的方法","date":"2022-04-24 15:12:09","docid":0,"fillcolor":"ffffed99","id":14,"originaltext":"UsernamePasswordAuthenticationFilter","page":11,"textblocks":[{"first":[90.02400207519531,587.5400390625,6.927360534667969,14.5],"last":[266.2599792480469,587.5400390625,3.801605224609375,14.5],"length":36,"rects":[[90.02400207519531,587.5400390625,180.03758239746094,14.5]],"start":188,"text":"UsernamePasswordAuthenticationFilter"}],"type":5,"uuid":"338697358c411c20e62b33e484fe40fc"}],"originaltext":"重点看三个过滤器","page":10,"textblocks":[{"first":[163.5955047607422,682.0999755859375,10.55999755859375,14.5],"last":[237.1669921875,682.0999755859375,10.55999755859375,14.5],"length":8,"rects":[[163.5955047607422,682.0999755859375,84.13148498535156,14.5]],"start":1140,"text":"重点看三个过滤器"}],"type":5,"uuid":"d174e2b4c1d4b62e53cc78c8908faca3"}],"originaltext":"2.5  SpringSecurity 基本原理","page":10,"textblocks":[{"first":[90.02400207519531,208.6976318359375,7.10400390625,14.068359375],"last":[233.30599975585938,208.6976318359375,12,14.068359375],"length":24,"rects":[[90.02400207519531,208.6976318359375,155.28199768066406,14.068359375]],"start":6,"text":"2.5  SpringSecurity 基本原理"}],"type":5,"uuid":"e771ad6c2628c615586770e591896406"},{"content":"用于自定义开发的两个重要接口之一（也就是我们用数据库中的账号密码来进行认证）\n\n用处：用来获取对应的User对象\n认证过滤器会调用这个接口来获取SpringSecurity中定义的User对象来进行认证\n","date":"2022-04-24 15:32:11","docid":0,"fillcolor":"ffffed99","id":16,"originaltext":"2.6  UserDetailsService 接口讲解","page":12,"textblocks":[{"first":[90.02400207519531,306.40765380859375,7.10400390625,14.068359375],"last":[257.0660095214844,306.40765380859375,12,14.068359375],"length":28,"rects":[[90.02400207519531,306.40765380859375,179.04200744628906,14.068359375]],"start":8,"text":"2.6  UserDetailsService 接口讲解"}],"type":5,"uuid":"b7f06e2245f46e32dd2d6f825919f8c9"},{"content":"用处：对返回的User对象中的密码进行加密\n\n上面的UserDetailsService返回对应的User对象，但是不能返回明文密码，所以就会使用这个接口对返回的User对象的密码进行加密\n\n（其中默认是没有使用加密，所以要使用@Bean的方式放入）","date":"2022-04-25 16:03:12","docid":0,"fillcolor":"ffffed99","folded":true,"id":17,"markups":[{"content":"默认是没有开启密码加密的，需要注入开启加密\n（如果没有使用注入方式开启加密，会导致认证不成功）\n\n因为密码不止是需要进行加密操作，还需要在认证过程中进行解密操作，所以一定需要开启，不能直接new，直接new可能只参与加密操作","date":"2022-04-25 17:02:00","docid":0,"fillcolor":"ffffed99","id":21,"originaltext":"BCryptPasswordEncoder ","page":15,"textblocks":[{"first":[90.02400207519531,268.0499572753906,6.219841003417969,14.5],"last":[202.1184539794922,268.0499572753906,2.2915496826171875,14.5],"length":22,"rects":[[90.02400207519531,268.0499572753906,114.38600158691406,14.5]],"start":6,"text":"BCryptPasswordEncoder "}],"type":5,"uuid":"05acb1e12b110838385630871ffbc1a5"}],"originaltext":"2.7  PasswordEncoder 接口讲解","page":14,"textblocks":[{"first":[90.02400207519531,431.2276306152344,7.10400390625,14.068359375],"last":[251.43800354003906,431.2276306152344,11.999984741210938,14.068359375],"length":25,"rects":[[90.02400207519531,431.2276306152344,173.4139862060547,14.068359375]],"start":78,"text":"2.7  PasswordEncoder 接口讲解"}],"type":5,"uuid":"214a147f504d3555c007656682f819c6"}],"originaltext":"2. SpringSecurity 入门案例","page":5,"textblocks":[{"first":[90.02400207519531,79.05998229980469,9.555000305175781,18.5],"last":[271.489990234375,79.05998229980469,15,18.5],"length":22,"rects":[[90.02400207519531,79.05998229980469,196.4659881591797,18.5]],"start":4,"text":"2. SpringSecurity 入门案例"}],"type":5,"uuid":"f085ccbd1041e5a6d3a1964981ac7096"},{"date":"2022-04-24 11:14:25","docid":0,"fillcolor":"ffffed99","folded":true,"id":3,"markups":[{"date":"2022-04-25 16:11:27","docid":0,"fillcolor":"ffffed99","folded":true,"id":18,"markups":[{"content":"（写死）\n通过配置文件进行配置\n或者\n通过配置类进行配置\n\n（一般只有超级管理员使用写死的方式设置）","date":"2022-04-25 16:11:33","docid":0,"fillcolor":"ffffed99","id":19,"originaltext":"方式一：在 application.properties","page":16,"textblocks":[{"first":[111.9800033569336,301.8899841308594,10.55999755859375,14.5],"last":[277.63763427734375,301.8899841308594,5.43841552734375,14.5],"length":28,"rects":[[111.9800033569336,301.8899841308594,171.0960464477539,14.5]],"start":183,"text":"方式一：在 application.properties"}],"type":5,"uuid":"5217c5843d201eb1fe595b6667943fa6"},{"content":"（动态）\n通过自定义编写实现类\n首先回去配置文件或者配置类中寻找对应的配置的账号密码，没有就会去寻找实现UserDetailsService\n的类来获取账号密码\n\n第一步：\n将对应UserDetailsService的获取账号密码的类注入，并开启对应的密码加密类，配置到SS中\n第二步：\n使用UserDetailsService，在一个User用户业务类中实现UserDetailsService接口，\nloadUserByUsername方法需要进行重写，因为不管如何都需要返回一个UserDetails对象，SS帮我们实现了（也可以使用实体实现）其中的角色没有，所以使用SS的工具类进行生成List<GrantedAuthority>\n参数（账号，加密的密码，上面生成的角色集合）","date":"2022-04-25 16:11:38","docid":0,"fillcolor":"ffffed99","id":20,"originaltext":"方式二：编写类实现接口","page":16,"textblocks":[{"first":[111.9800033569336,394.7699890136719,10.55999755859375,13.5],"last":[217.11532592773438,394.7699890136719,10.55999755859375,13.5],"length":11,"rects":[[111.9800033569336,394.7699890136719,115.69532012939453,13.5]],"start":287,"text":"方式二：编写类实现接口"}],"type":5,"uuid":"6e0cb3eefb337359f4a07dea0a115b33"}],"originaltext":"3.1  设置登录系统的账号、密码","page":16,"textblocks":[{"first":[90.02400207519531,262.13751220703125,7.10400390625,12],"last":[245.48001098632812,262.13751220703125,12,12],"length":17,"rects":[[90.02400207519531,262.13751220703125,167.4560089111328,12]],"start":164,"text":"3.1  设置登录系统的账号、密码"}],"type":5,"uuid":"c9643bea2c2285554b799f373cc36dd0"},{"content":"步骤：\n1、对底层查询数据库注解添加\n2、查出来后只要在UserDeatilsService中添加即可\n\n注意：底层查询数据库的Mapper中的主注解\n@Mapper 和 @Repository 联合使用\n一个属于Mybatis的一个属于Spring的\n只用第一个导致@Autowired找不到，但是不影响使用\n只是用第二个，导致Mybatis找不到对应的Mapper\n（只使用@Mapper好像也行，有时@Autowired不暴红，反正稳中的话就两个一起使用）","date":"2022-04-25 20:17:33","docid":0,"fillcolor":"ffffed99","folded":true,"id":22,"markups":[{"date":"2022-04-25 20:17:44","docid":0,"fillcolor":"ffffed99","id":23,"originaltext":"3.2.1  准备 sql","page":17,"textblocks":[{"first":[111.9800033569336,370.16998291015625,6.726722717285156,14.5],"last":[180.260009765625,370.16998291015625,3.189117431640625,14.5],"length":13,"rects":[[111.9800033569336,370.16998291015625,71.46912384033203,14.5]],"start":279,"text":"3.2.1  准备 sql"}],"type":5,"uuid":"d7fd7cd8ab4e52a1ff35f98bfcf7b47f"},{"date":"2022-04-25 20:17:51","docid":0,"fillcolor":"ffffed99","id":24,"originaltext":"3.2.2  添加依赖","page":19,"textblocks":[{"first":[111.9800033569336,132.39996337890625,6.726722717285156,13.5],"last":[176.18382263183594,132.39996337890625,10.55999755859375,13.5],"length":11,"rects":[[111.9800033569336,132.39996337890625,74.7638168334961,13.5]],"start":76,"text":"3.2.2  添加依赖"}],"type":5,"uuid":"fe1abc4406479e6257ca6120af398fc6"},{"date":"2022-04-25 20:18:38","docid":0,"fillcolor":"ffffed99","id":25,"originaltext":"3.2.3  制作实体类","page":19,"textblocks":[{"first":[111.9800033569336,693.47998046875,6.726722717285156,13.5],"last":[186.62765502929688,693.47998046875,10.55999755859375,13.5],"length":12,"rects":[[111.9800033569336,693.47998046875,85.20764923095703,13.5]],"start":1105,"text":"3.2.3  制作实体类"}],"type":5,"uuid":"6c860ccbf7609f81343cc159c559f02a"},{"date":"2022-04-25 20:18:43","docid":0,"fillcolor":"ffffed99","id":26,"originaltext":"3.2.4  整合 MybatisPlus 制作 mapper","page":20,"textblocks":[{"first":[111.9800033569336,157.73995971679688,6.726722717285156,14.5],"last":[293.9223327636719,157.73995971679688,4.583038330078125,14.5],"length":31,"rects":[[111.9800033569336,157.73995971679688,186.5253677368164,14.5]],"start":94,"text":"3.2.4  整合 MybatisPlus 制作 mapper"}],"type":5,"uuid":"529d05c7dc781a40a59229b26195aca1"},{"date":"2022-04-25 20:18:49","docid":0,"fillcolor":"ffffed99","id":27,"originaltext":"3.2.5  制作登录实现类","page":20,"textblocks":[{"first":[111.9800033569336,374.8299865722656,6.726722717285156,13.5],"last":[207.63148498535156,374.8299865722656,10.55999755859375,13.5],"length":14,"rects":[[111.9800033569336,374.8299865722656,106.21147918701172,13.5]],"start":439,"text":"3.2.5  制作登录实现类"}],"type":5,"uuid":"af974445df382887cbde2a00a52adda9"},{"date":"2022-04-25 20:19:15","docid":0,"fillcolor":"ffffed99","id":28,"originaltext":"3.2.6  测试访问","page":21,"textblocks":[{"first":[111.9800033569336,76.5999755859375,6.726722717285156,13.5],"last":[176.18382263183594,76.5999755859375,10.55999755859375,13.5],"length":11,"rects":[[111.9800033569336,76.5999755859375,74.7638168334961,13.5]],"start":4,"text":"3.2.6  测试访问"}],"type":5,"uuid":"b71b171380f6bdd654c17c00a6f0f9e1"}],"originaltext":"3.2  实现数据库认证来完成用户登录","page":17,"textblocks":[{"first":[90.02400207519531,299.33746337890625,7.10400390625,12],"last":[269.5880126953125,299.33746337890625,12,12],"length":19,"rects":[[90.02400207519531,299.33746337890625,191.5640106201172,12]],"start":248,"text":"3.2  实现数据库认证来完成用户登录"}],"type":5,"uuid":"781440742b8d53bee42a5354db0d2d70"},{"date":"2022-04-25 20:19:45","docid":0,"fillcolor":"ffffed99","folded":true,"id":29,"markups":[{"date":"2022-04-26 09:48:53","docid":0,"fillcolor":"ffffed99","id":30,"originaltext":"3.3.1  引入前端模板依赖","page":21,"textblocks":[{"first":[111.9800033569336,356.469970703125,6.726722717285156,13.5],"last":[218.1914825439453,356.469970703125,10.55999755859375,13.5],"length":15,"rects":[[111.9800033569336,356.469970703125,116.77147674560547,13.5]],"start":48,"text":"3.3.1  引入前端模板依赖"}],"type":5,"uuid":"ef47ec1f916983f0f40c979015a0790e"},{"date":"2022-04-26 09:48:56","docid":0,"fillcolor":"ffffed99","id":31,"originaltext":"3.3.2  引入登录页面","page":21,"textblocks":[{"first":[111.9800033569336,486.5699768066406,6.726722717285156,13.5],"last":[197.18765258789062,486.5699768066406,10.55999755859375,13.5],"length":13,"rects":[[111.9800033569336,486.5699768066406,95.76764678955078,13.5]],"start":197,"text":"3.3.2  引入登录页面"}],"type":5,"uuid":"46da2e4ad9b34192b575312390897b95"},{"date":"2022-04-26 09:48:57","docid":0,"fillcolor":"ffffed99","id":32,"originaltext":"3.3.3  编写控制器","page":21,"textblocks":[{"first":[111.9800033569336,561.719970703125,6.726722717285156,13.5],"last":[186.62765502929688,561.719970703125,10.55999755859375,13.5],"length":12,"rects":[[111.9800033569336,561.719970703125,85.20764923095703,13.5]],"start":228,"text":"3.3.3  编写控制器"}],"type":5,"uuid":"eb1ed17f3a36623a434fdfd88585d9c0"},{"date":"2022-04-26 09:49:10","docid":0,"fillcolor":"ffffed99","id":33,"originaltext":"3.3.4  编写配置类放行登录页面以及静态资源","page":22,"textblocks":[{"first":[111.9800033569336,136.5999755859375,6.726722717285156,13.5],"last":[312.65069580078125,136.5999755859375,10.55999755859375,13.5],"length":24,"rects":[[111.9800033569336,136.5999755859375,211.2306900024414,13.5]],"start":9,"text":"3.3.4  编写配置类放行登录页面以及静态资源"}],"type":5,"uuid":"35243bff222fd2101dc2c59f103aaec3"},{"date":"2022-04-26 09:49:15","docid":0,"fillcolor":"ffffed99","id":34,"originaltext":"3.3.5  测试","page":22,"textblocks":[{"first":[111.9800033569336,457.4499816894531,6.726722717285156,11.5],"last":[155.17999267578125,457.4499816894531,10.55999755859375,11.5],"length":9,"rects":[[111.9800033569336,457.4499816894531,53.759986877441406,11.5]],"start":511,"text":"3.3.5  测试"}],"type":5,"uuid":"f41679a49ce9e126d0b1006e402e73a0"},{"date":"2022-04-26 09:49:22","docid":0,"fillcolor":"ffffed99","id":35,"originaltext":"3.3.6  设置未授权的请求跳转到登录页","page":23,"textblocks":[{"first":[111.9800033569336,259.0499572753906,6.726722717285156,14.5],"last":[281.2030029296875,259.0499572753906,10.55999755859375,14.5],"length":21,"rects":[[111.9800033569336,259.0499572753906,179.78299713134766,14.5]],"start":6,"text":"3.3.6  设置未授权的请求跳转到登录页"}],"type":5,"uuid":"c96588b6305d27c788d5e83701771e1a"}],"originaltext":"3.3 未认证请求跳转到登录页","page":21,"textblocks":[{"first":[90.02400207519531,316.61749267578125,7.10400390625,12],"last":[230.7320098876953,316.61749267578125,12,12],"length":15,"rects":[[90.02400207519531,316.61749267578125,152.7080078125,12]],"start":31,"text":"3.3 未认证请求跳转到登录页"}],"type":5,"uuid":"7f21098437485dc3dbce9f7a85bb07c4"},{"content":"对权限分级，四种方式\n（基于角色或者直接对权限进行分级）","date":"2022-04-26 09:49:34","docid":0,"fillcolor":"ffffed99","folded":true,"id":36,"markups":[{"content":"第一种：\n1、直接在配置类中进行配置角色\n2、因为认证过程中获取的UserDeatil对象是具有权限的，所以在创建UserDetails对象的时候可以添加权限\n\n缺陷：这个权限分级hasAuthority对路径要求的权限只能写一个字符串，不能写多个字符串","date":"2022-04-26 14:19:59","docid":0,"fillcolor":"ffffed99","id":37,"originaltext":"3.4.1  hasAuthority 方法","page":24,"textblocks":[{"first":[111.9800033569336,696.760009765625,6.726722717285156,11.5],"last":[226.25,696.760009765625,10.55999755859375,11.5],"length":22,"rects":[[111.9800033569336,696.760009765625,124.82999420166016,11.5]],"start":560,"text":"3.4.1  hasAuthority 方法"}],"type":5,"uuid":"db00e7c3db3ddc415df3a5ce97dd3610"},{"content":"第一个方法的升级版，对路径的权限要求可以输入多个，其他都跟第一个一样\n有其中一个就可以访问该路径\n（注意其中的角色分离以逗号，为分隔符）","date":"2022-04-26 14:20:06","docid":0,"fillcolor":"ffffed99","id":38,"originaltext":"3.4.2 hasAnyAuthority 方法","page":26,"textblocks":[{"first":[111.9800033569336,77.719970703125,6.726722717285156,11.5],"last":[242.69000244140625,77.719970703125,10.55999755859375,11.5],"length":24,"rects":[[111.9800033569336,77.719970703125,141.2699966430664,11.5]],"start":4,"text":"3.4.2 hasAnyAuthority 方法"}],"type":5,"uuid":"6effe6b235e1186b79fda4ac1682a477"},{"content":"与上面类似\n不同：\n1、会见规定的角色字符串加上\"ROLE_\"前缀\n对应的真正角色就是\"ROLE_规定的角色字符串\"\n","date":"2022-04-26 14:20:11","docid":0,"fillcolor":"ffffed99","id":39,"originaltext":"3.4.3  hasRole 方法","page":26,"textblocks":[{"first":[111.9800033569336,369.0899658203125,6.726722717285156,14.5],"last":[200.20999145507812,369.0899658203125,10.55999755859375,14.5],"length":17,"rects":[[111.9800033569336,369.0899658203125,98.78998565673828,14.5]],"start":112,"text":"3.4.3  hasRole 方法"}],"type":5,"uuid":"b482b7139588f359fa5de01a68ce4809"},{"content":"与第三的差不多底层也是加上了\"RPLE_\"前缀字符串\n不同：\n多个角色逗号，隔开满足其中一个即可","date":"2022-04-26 14:20:17","docid":0,"fillcolor":"ffffed99","id":40,"originaltext":"3.4.4  hasAnyRole","page":27,"textblocks":[{"first":[111.9800033569336,385.78997802734375,6.726722717285156,11.5],"last":[200.27120971679688,385.78997802734375,6.27264404296875,11.5],"length":17,"rects":[[111.9800033569336,385.78997802734375,94.56385040283203,11.5]],"start":60,"text":"3.4.4  hasAnyRole"}],"type":5,"uuid":"85d3b4582f5cd3fec1baed8e87e6d110"}],"originaltext":"3.4 基于角色或权限进行访问控制","page":24,"textblocks":[{"first":[90.02400207519531,655.907470703125,7.10400390625,12],"last":[254.8400115966797,655.907470703125,12.000015258789062,12],"length":17,"rects":[[90.02400207519531,655.907470703125,176.81602478027344,12]],"start":541,"text":"3.4 基于角色或权限进行访问控制"}],"type":5,"uuid":"fafcaeda63f2a869f98c1c66919bd752"},{"content":"对于角色和真正菜单权限处理好后会被全部添加到\ngrantedAuthority的List集合中\n不同在于因为使用hasRole的方法所以字符串直接就分隔开来的\n\n获取到的角色添加进去的时候需要添加前缀\"ROLE_\"达到角色和菜单真实权限的分隔，而菜单权限直接添加即可\n\n其中处理好的字符串全部要创建对应的\nSimpleGrantedAuthority对象，然后放到grantedAuthority的List集合中，\n（其中的处理一般都会放到生成UserDetailsService中进行）","date":"2022-04-26 14:20:25","docid":0,"fillcolor":"ffffed99","folded":true,"id":41,"markups":[{"date":"2022-04-26 15:00:15","docid":0,"fillcolor":"ffffed99","id":42,"originaltext":"3.5.1  添加实体类","page":28,"textblocks":[{"first":[111.9800033569336,116.67999267578125,6.726722717285156,13.5],"last":[186.62765502929688,116.67999267578125,10.55999755859375,13.5],"length":12,"rects":[[111.9800033569336,116.67999267578125,85.20764923095703,13.5]],"start":22,"text":"3.5.1  添加实体类"}],"type":5,"uuid":"9bdde0dcfef0bba207cca385db469910"},{"date":"2022-04-26 15:00:20","docid":0,"fillcolor":"ffffed99","id":43,"originaltext":"3.5.2  编写接口与实现类","page":28,"textblocks":[{"first":[111.9800033569336,400.52996826171875,6.726722717285156,13.5],"last":[218.1914825439453,400.52996826171875,10.55999755859375,13.5],"length":15,"rects":[[111.9800033569336,400.52996826171875,116.77147674560547,13.5]],"start":255,"text":"3.5.2  编写接口与实现类"}],"type":5,"uuid":"adc54a372d2742c2a313b0a5862b63c8"},{"date":"2022-04-26 15:00:26","docid":0,"fillcolor":"ffffed99","id":44,"originaltext":"3.5.3  在配置文件中添加映射","page":29,"textblocks":[{"first":[111.9800033569336,647.760009765625,6.726722717285156,13.5],"last":[239.1953125,647.760009765625,10.55999755859375,13.5],"length":17,"rects":[[111.9800033569336,647.760009765625,137.77530670166016,13.5]],"start":558,"text":"3.5.3  在配置文件中添加映射"}],"type":5,"uuid":"dbeb3728476b99efbcde4b237bd824a9"},{"date":"2022-04-26 15:00:31","docid":0,"fillcolor":"ffffed99","id":45,"originaltext":"3.5.4  修改访问配置类","page":30,"textblocks":[{"first":[111.9800033569336,76.719970703125,6.726722717285156,13.5],"last":[207.63148498535156,76.719970703125,10.55999755859375,13.5],"length":14,"rects":[[111.9800033569336,76.719970703125,106.21147918701172,13.5]],"start":4,"text":"3.5.4  修改访问配置类"}],"type":5,"uuid":"85b51faba0e37d71240e92b859146c69"},{"date":"2022-04-26 15:00:35","docid":0,"fillcolor":"ffffed99","id":46,"originaltext":"3.5.5  使用管理员与非管理员进行测试","page":30,"textblocks":[{"first":[111.9800033569336,267.78997802734375,6.726722717285156,13.5],"last":[281.2030029296875,267.78997802734375,10.55999755859375,13.5],"length":21,"rects":[[111.9800033569336,267.78997802734375,179.78299713134766,13.5]],"start":22,"text":"3.5.5  使用管理员与非管理员进行测试"}],"type":5,"uuid":"fc48cf613d8dfdec9528761125542471"}],"originaltext":"3.5  基于数据库实现权限认证","page":28,"textblocks":[{"first":[90.02400207519531,76.82745361328125,7.10400390625,12],"last":[233.48001098632812,76.82745361328125,12,12],"length":16,"rects":[[90.02400207519531,76.82745361328125,155.4560089111328,12]],"start":4,"text":"3.5  基于数据库实现权限认证"}],"type":5,"uuid":"72b530def0f3c66c5fced2b0bc204666"},{"content":"直接在配置类中配置http对象即可","date":"2022-04-26 15:00:40","docid":0,"fillcolor":"ffffed99","folded":true,"id":47,"markups":[{"date":"2022-04-26 15:00:46","docid":0,"fillcolor":"ffffed99","id":48,"originaltext":"3.6.1  修改访问配置类","page":30,"textblocks":[{"first":[111.9800033569336,529.5299682617188,6.726722717285156,13.5],"last":[207.63148498535156,529.5299682617188,10.55999755859375,13.5],"length":14,"rects":[[111.9800033569336,529.5299682617188,106.21147918701172,13.5]],"start":86,"text":"3.6.1  修改访问配置类"}],"type":5,"uuid":"1da92d3ad5587ddf4180bfbe869af0f4"},{"date":"2022-04-26 15:00:53","docid":0,"fillcolor":"ffffed99","id":49,"originaltext":"3.6.2  添加对应控制器","page":30,"textblocks":[{"first":[111.9800033569336,609.9599609375,6.726722717285156,13.5],"last":[207.63148498535156,609.9599609375,10.55999755859375,13.5],"length":14,"rects":[[111.9800033569336,609.9599609375,106.21147918701172,13.5]],"start":157,"text":"3.6.2  添加对应控制器"}],"type":5,"uuid":"26677a483698b6ba90cc66b71f2ab4ac"}],"originaltext":"3.6  自定义 403 页面","page":30,"textblocks":[{"first":[90.02400207519531,487.857177734375,7.10400390625,15.166015625],"last":[189.13999938964844,487.857177734375,12,15.166015625],"length":15,"rects":[[90.02400207519531,487.857177734375,111.11599731445312,15.166015625]],"start":69,"text":"3.6  自定义 403 页面"}],"type":5,"uuid":"8dc8f411056cdb6c6fc21a317d0507d0"},{"content":"使用注解的前提是\n使用了注解开启，并指定使用secured来限制权限\n@EnableGlobalMethodSecurity(securedEnabled=true)\n\n相当于不用在配置类中配置那么多的接口角色限制，直接在接口上就能配置\n\n相应的角色的配置也需要使用前缀\"ROLE_\"，之前的配置类并不需要这样写","date":"2022-04-26 15:12:14","docid":0,"fillcolor":"ffffed99","folded":true,"id":51,"markups":[{"content":"一般放在接口上，用于验证角色，可以写多个角色\n注意：\n1、验证的角色是要有前缀\"ROLE_\"","date":"2022-04-26 15:12:20","docid":0,"fillcolor":"ffffed99","id":52,"originaltext":"3.7.1  @Secured","page":31,"textblocks":[{"first":[111.9800033569336,342.489990234375,6.726722717285156,12.5],"last":[190.33425903320312,342.489990234375,6.642242431640625,12.5],"length":15,"rects":[[111.9800033569336,342.489990234375,84.99649810791016,12.5]],"start":37,"text":"3.7.1  @Secured"}],"type":5,"uuid":"afefab00b8ef17f4d0a1e64f0daf6f74"},{"content":"使用prePost方式限制权限，前提是指明使用这个方式做权限\n应该是使用aop思想的方式做的接口权限限制\n\n使用的是hasAnyAuthority方式验证权限，权限的方式有两种使用角色的方式间接验证权限，直接验证拥有的权限\n这个就是直接验证所拥有的权限\n\n直接验证菜单权限括号写入\n\"hasAnyAuthority('对应的菜单权限')\"\n验证角色括号中写入\n\"hasAnyRole('对应的角色')\"\n\n（注意写的时候需要加入前缀\"ROLE_\"）\n（可以使用配置类的四种方式）","date":"2022-04-26 15:15:37","docid":0,"fillcolor":"ffffed99","id":53,"originaltext":"3.7.2  @PreAuthorize","page":32,"textblocks":[{"first":[111.9800033569336,259.78997802734375,6.726722717285156,11.5],"last":[216.713134765625,259.78997802734375,6.27264404296875,11.5],"length":20,"rects":[[111.9800033569336,259.78997802734375,111.00577545166016,11.5]],"start":107,"text":"3.7.2  @PreAuthorize"}],"type":5,"uuid":"5884f0d53499105158c56c45e3e88247"},{"content":"跟上面第二个一样，只不过是之后验证，重点在于之后","date":"2022-04-26 15:15:52","docid":0,"fillcolor":"ffffed99","id":54,"originaltext":"3.7.3  @PostAuthorize","page":32,"textblocks":[{"first":[111.9800033569336,537.8699951171875,6.726722717285156,12.5],"last":[222.2360076904297,537.8699951171875,6.27264404296875,12.5],"length":21,"rects":[[111.9800033569336,537.8699951171875,116.52864837646484,12.5]],"start":522,"text":"3.7.3  @PostAuthorize"}],"type":5,"uuid":"0556aef4713d16b4a498c799f60514b8"},{"content":"专门用于过滤数组或者集合，如果其中的表达式为false该条数据就会被过滤\n验证之后对数据进行过滤","date":"2022-04-26 15:15:57","docid":0,"fillcolor":"ffffed99","id":55,"originaltext":"3.7.4 @PostFilter","page":33,"textblocks":[{"first":[111.9800033569336,101.29997253417969,6.726722717285156,13.5],"last":[197.38352966308594,101.29997253417969,4.583038330078125,13.5],"length":17,"rects":[[111.9800033569336,101.29997253417969,89.98656463623047,13.5]],"start":15,"text":"3.7.4 @PostFilter"}],"type":5,"uuid":"8d17993d001c56c3faf3aa3c3b1ee488"},{"content":"对传入的参数进行过滤\n专门用于过滤数组或者集合，如果其中的表达式为false该条数据就会被过滤","date":"2022-04-26 15:16:03","docid":0,"fillcolor":"ffffed99","id":56,"originaltext":"3.7.5 @PreFilter","page":33,"textblocks":[{"first":[111.9800033569336,365.8699951171875,6.726722717285156,11.5],"last":[192.0008087158203,365.8699951171875,4.583038330078125,11.5],"length":16,"rects":[[111.9800033569336,365.8699951171875,84.60384368896484,11.5]],"start":459,"text":"3.7.5 @PreFilter"}],"type":5,"uuid":"d28f35640895fa0cb02047ffbb7fed8e"},{"date":"2022-04-26 15:16:12","docid":0,"fillcolor":"ffffed99","id":57,"originaltext":"3.7.6 权限表达式","page":35,"textblocks":[{"first":[111.9800033569336,148.1199951171875,6.726722717285156,13.5],"last":[183.6238250732422,148.1199951171875,10.55999755859375,13.5],"length":11,"rects":[[111.9800033569336,148.1199951171875,82.20381927490234,13.5]],"start":12,"text":"3.7.6 权限表达式"}],"type":5,"uuid":"b25f855ba266662f13cf1abfe09f1abf"}],"originaltext":"3.7  注解使用","page":31,"textblocks":[{"first":[90.02400207519531,303.7774658203125,7.10400390625,12],"last":[149.156005859375,303.7774658203125,12,12],"length":9,"rects":[[90.02400207519531,303.7774658203125,71.13200378417969,12]],"start":26,"text":"3.7  注解使用"}],"type":5,"uuid":"ea093bb9f99a9166523c3f879a0ed07c"}],"originaltext":"3. SpringSecurity Web 权限方案","page":16,"textblocks":[{"first":[90.02400207519531,185.97996520996094,9.555000305175781,18.5],"last":[309.1700134277344,185.97996520996094,15,18.5],"length":26,"rects":[[90.02400207519531,185.97996520996094,234.14601135253906,18.5]],"start":136,"text":"3. SpringSecurity Web 权限方案"}],"type":5,"uuid":"8a756a716b56b3756013a8904df696aa"},{"date":"2022-04-24 11:15:23","docid":0,"fillcolor":"ffffed99","id":5,"markups":[{"date":"2022-04-26 15:59:13","docid":0,"fillcolor":"ffffed99","id":58,"originaltext":"5.1 SpringSecurity 的过滤器介绍","page":55,"textblocks":[{"first":[90.02400207519531,539.82763671875,7.10400390625,14.068359375],"last":[254.0540008544922,539.82763671875,12.000015258789062,14.068359375],"length":25,"rects":[[90.02400207519531,539.82763671875,176.03001403808594,14.068359375]],"start":1085,"text":"5.1 SpringSecurity 的过滤器介绍"}],"type":5,"uuid":"336b4c458342fbeb4293fd31c7baa876"},{"date":"2022-04-26 16:01:35","docid":0,"fillcolor":"ffffed99","folded":true,"id":59,"markups":[{"date":"2022-04-26 16:02:39","docid":0,"fillcolor":"ffffed99","id":60,"originaltext":"UsernamePasswordAuthenticationFilter","page":57,"textblocks":[{"first":[90.02400207519531,161.10499572753906,5.279998779296875,10.601242065429688],"last":[275.1407775878906,161.10499572753906,5.279998779296875,10.601242065429688],"length":36,"rects":[[90.02400207519531,161.10499572753906,190.3967742919922,10.601242065429688]],"start":160,"text":"UsernamePasswordAuthenticationFilter"}],"type":5,"uuid":"d42f6c52241d6281aefac46a03f33e94"},{"date":"2022-04-26 16:02:46","docid":0,"fillcolor":"ffffed99","id":61,"originaltext":"ExceptionTranslationFilter ","page":57,"textblocks":[{"first":[90.02400207519531,207.1850128173828,5.279998779296875,10.601242065429688],"last":[227.5151824951172,207.1850128173828,2.8148193359375,10.601242065429688],"length":27,"rects":[[90.02400207519531,207.1850128173828,140.30599975585938,10.601242065429688]],"start":240,"text":"ExceptionTranslationFilter "}],"type":5,"uuid":"570978fb1bc440e77f609242f22e26bd"},{"date":"2022-04-26 16:02:59","docid":0,"fillcolor":"ffffed99","id":62,"originaltext":"FilterSecurityInterceptor","page":57,"textblocks":[{"first":[90.02400207519531,251.4499969482422,5.279998779296875,13.500015258789062],"last":[216.95518493652344,251.4499969482422,5.279998779296875,13.500015258789062],"length":25,"rects":[[90.02400207519531,251.4499969482422,132.211181640625,13.500015258789062]],"start":327,"text":"FilterSecurityInterceptor"}],"type":5,"uuid":"8854ea6c4baf82c8246cf524b51ef694"}],"originaltext":"5.2 SpringSecurity 基本流程","page":56,"textblocks":[{"first":[90.02400207519531,525.6699829101562,7.403999328613281,16.5],"last":[242.20999145507812,525.6699829101562,12,16.5],"length":23,"rects":[[90.02400207519531,525.6699829101562,164.1859893798828,16.5]],"start":989,"text":"5.2 SpringSecurity 基本流程"}],"type":5,"uuid":"58e1249f17d08bd488af7989564e0738"},{"date":"2022-04-26 16:04:01","docid":0,"fillcolor":"ffffed99","id":63,"originaltext":"5.3 SpringSecurity 认证流程","page":57,"textblocks":[{"first":[90.02400207519531,318.0499572753906,7.403999328613281,16.5],"last":[239.08999633789062,318.0499572753906,12,16.5],"length":23,"rects":[[90.02400207519531,318.0499572753906,161.0659942626953,16.5]],"start":462,"text":"5.3 SpringSecurity 认证流程"}],"type":5,"uuid":"f0d2b60c074d98688c7dc4bebeab279f"}],"originaltext":"5. SpringSecurity 原理总结","page":55,"textblocks":[{"first":[111.0199966430664,463.989990234375,9.555000305175781,19.5],"last":[289.3699951171875,463.989990234375,15,19.5],"length":22,"rects":[[111.0199966430664,463.989990234375,193.3499984741211,19.5]],"start":1061,"text":"5. SpringSecurity 原理总结"}],"type":5,"uuid":"ddf4048e2e46de9c5762551f1eb8efa6"}],"maxid":63,"notelinks":[],"title":"SpringSecurity课程文档","unimportant":[]}