{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-03-30 21:35:21","docid":0,"fillcolor":"ffffed99","folded":false,"id":36,"markups":[{"date":"2022-03-29 16:05:53","docid":0,"fillcolor":"ffffed99","id":1,"originaltext":"技术选型","page":0,"textblocks":[{"first":[52.35717010498047,125.802734375,17.069480895996094,19.5],"last":[103.56562805175781,125.802734375,17.069488525390625,19.5],"length":4,"rects":[[52.35717010498047,125.802734375,68.27794647216797,19.5]],"start":32,"text":"技术选型"}],"type":5},{"content":"1、在springboot中已经配置好了所有的springSecurity配置，他会拦截所有没有认证的请求","date":"2022-03-29 16:05:56","docid":0,"fillcolor":"ffffed99","folded":true,"id":2,"markups":[{"date":"2022-03-29 16:06:00","docid":0,"fillcolor":"ffffed99","id":3,"originaltext":"创建工程并导入jar包","page":0,"textblocks":[{"first":[52.35695266723633,223.08673095703125,14.630924224853516,17.5],"last":[174.71949768066406,223.08673095703125,14.63092041015625,17.5],"length":11,"rects":[[52.35695266723633,223.08673095703125,136.99346542358398,17.5]],"start":98,"text":"创建工程并导入jar包"}],"type":5},{"date":"2022-03-30 15:33:15","docid":0,"fillcolor":"ffffed99","id":4,"originaltext":"加入SpringSecurity的jar包","page":1,"textblocks":[{"first":[52.368106842041016,340.47686767578125,14.634037017822266,19.5],"last":[222.1746826171875,340.47686767578125,14.634033203125,19.5],"length":21,"rects":[[52.368106842041016,340.47686767578125,184.44060897827148,19.5]],"start":42,"text":"加入SpringSecurity的jar包"}],"type":5},{"date":"2022-03-30 15:33:18","docid":0,"fillcolor":"ffffed99","id":5,"originaltext":"重启再次测试","page":1,"textblocks":[{"first":[52.35717010498047,455.6692199707031,14.630989074707031,17.5],"last":[125.5121078491211,455.6692199707031,14.630989074707031,17.5],"length":6,"rects":[[52.35717010498047,455.6692199707031,87.78592681884766,17.5]],"start":67,"text":"重启再次测试"}],"type":5}],"originaltext":"初步整合认证第一版","page":0,"textblocks":[{"first":[52.35700225830078,185.57537841796875,17.069427490234375,20.5],"last":[188.91246032714844,185.57537841796875,17.069427490234375,20.5],"length":9,"rects":[[52.35700225830078,185.57537841796875,153.62488555908203,20.5]],"start":87,"text":"初步整合认证第一版"}],"type":5},{"content":"如果需要使用jsp，那么只能干掉springboot的tomcat，用加进来的\n\n这部分重点：\n1、对于jsp与springboot的整合：加入两个jar包，替换其中的tomcart，使用maven来启动服务\n2、对于springsecurity的配置：\n   1、指定需要释放的资源\n   2、指定登录的配置\n   3、指定注销的配置\n   4、指定csrf的配置","date":"2022-03-30 15:45:47","docid":0,"fillcolor":"ffffed99","folded":false,"id":6,"markups":[{"date":"2022-03-30 15:45:50","docid":0,"fillcolor":"ffffed99","id":7,"originaltext":"说明","page":2,"textblocks":[{"first":[52.368106842041016,437.3901062011719,14.634037017822266,18.5],"last":[67.00214385986328,437.3901062011719,14.634033203125,18.5],"length":2,"rects":[[52.368106842041016,437.3901062011719,29.268070220947266,18.5]],"start":43,"text":"说明"}],"type":5},{"content":"转载两个jar包","date":"2022-03-30 15:46:00","docid":0,"fillcolor":"ffffed99","id":8,"originaltext":"导入SpringBoot的tomcat启动插件jar包","page":2,"textblocks":[{"first":[52.368106842041016,515.3798217773438,14.634037017822266,18.5],"last":[307.87835693359375,515.3798217773438,14.634033203125,18.5],"length":27,"rects":[[52.368106842041016,515.3798217773438,270.14428329467773,18.5]],"start":144,"text":"导入SpringBoot的tomcat启动插件jar包"}],"type":5},{"content":"","date":"2022-03-30 16:00:14","docid":0,"fillcolor":"ffffed99","folded":true,"id":9,"markups":[{"content":"1、创建webapp包\n（因为所有的jsp的静态资源不可以放在resource包下访问不到，resource里面的文件跳转都需要使用后端进行跳转）","date":"2022-03-30 16:06:04","docid":0,"fillcolor":"ffffed99","id":10,"originaltext":"创建webapp目录","page":2,"textblocks":[{"first":[130.9893341064453,712.1967163085938,9.753997802734375,14.5],"last":[196.6667022705078,712.1967163085938,9.753997802734375,14.5],"length":10,"rects":[[130.9893341064453,712.1967163085938,75.43136596679688,14.5]],"start":201,"text":"创建webapp目录"}],"type":5},{"content":"2、在pom中修改为web工程，\n将jsp静态资源文件放入到webapp包下不用导入WEB-INF的东西","date":"2022-03-30 16:06:18","docid":0,"fillcolor":"ffffed99","id":11,"originaltext":"pom文件中修改项目为web工程","page":3,"textblocks":[{"first":[378.320556640625,191.81158447265625,5.97918701171875,12.5],"last":[506.0851135253906,191.81158447265625,9.753997802734375,12.5],"length":16,"rects":[[378.320556640625,191.81158447265625,137.5185546875,12.5]],"start":39,"text":"pom文件中修改项目为web工程"}],"type":5}],"originaltext":"加入jsp页面等静态资源","page":2,"textblocks":[{"first":[52.35717010498047,683.7862548828125,14.630989074707031,17.5],"last":[190.4016571044922,683.7862548828125,14.6309814453125,17.5],"length":12,"rects":[[52.35717010498047,683.7862548828125,152.67546844482422,17.5]],"start":175,"text":"加入jsp页面等静态资源"}],"type":5},{"date":"2022-03-30 16:34:40","docid":0,"fillcolor":"ffffed99","id":12,"originaltext":"提供SpringSecurity配置类","page":4,"textblocks":[{"first":[52.3984489440918,657.9038696289062,14.642528533935547,19.5086669921875],"last":[216.98460388183594,657.9038696289062,14.642562866210938,19.5086669921875],"length":19,"rects":[[52.3984489440918,657.9038696289062,179.22871780395508,19.5086669921875]],"start":45,"text":"提供SpringSecurity配置类"}],"type":5},{"date":"2022-03-30 17:34:05","docid":0,"fillcolor":"ffffed99","id":13,"originaltext":"修改产品处理器","page":5,"textblocks":[{"first":[52.35717010498047,508.2054443359375,14.630989074707031,17.5],"last":[140.14308166503906,508.2054443359375,14.6309814453125,17.5],"length":7,"rects":[[52.35717010498047,508.2054443359375,102.4168930053711,17.5]],"start":0,"text":"修改产品处理器"}],"type":5},{"content":"只有jsp才需要配置视图解析器","date":"2022-03-30 17:34:12","docid":0,"fillcolor":"ffffed99","id":14,"originaltext":"配置视图解析器","page":5,"textblocks":[{"first":[52.35717010498047,728.7957763671875,14.630989074707031,17.5],"last":[140.14308166503906,728.7957763671875,14.6309814453125,17.5],"length":7,"rects":[[52.35717010498047,728.7957763671875,102.4168930053711,17.5]],"start":26,"text":"配置视图解析器"}],"type":5},{"content":"启动需要在插件中启动\n（位置在maven的M当中输入：\nspring-boot:run\n 即可）\n","date":"2022-03-30 19:38:36","docid":0,"fillcolor":"ffffed99","id":20,"originaltext":"使用tomcat插件启动项目","page":6,"textblocks":[{"first":[52.357730865478516,215.2712860107422,14.631145477294922,18.50335693359375],"last":[207.26181030273438,215.2712860107422,14.6309814453125,18.50335693359375],"length":14,"rects":[[52.357730865478516,215.2712860107422,169.53506088256836,18.50335693359375]],"start":0,"text":"使用tomcat插件启动项目"}],"type":5}],"originaltext":"整合认证第二版【加入jsp使用自定义认证页面】","page":2,"textblocks":[{"first":[52.368106842041016,401.1140441894531,17.073040008544922,19.5],"last":[401.2569580078125,401.1140441894531,17.073028564453125,19.5],"length":23,"rects":[[52.368106842041016,401.1140441894531,365.9618797302246,19.5]],"start":18,"text":"整合认证第二版【加入jsp使用自定义认证页面】"}],"type":5},{"content":"认证：\n1、因为springSecurity底层已经写好了认证，所以我能只要提供对应的业务层即可，会自己寻找loadUserByUsername方法\n2、所以对应的UserService业务层接口需要继承UserDetailsService然后实现方法\n3、实现的方法需要返回对应的UserDetails实体，但是我们写的不是这个，所以底层的实体需要实现这个类让他变成UserDetails，然后业务查询到对应的账号密码返回他即可\n4、因为还需要角色，所以角色实体也需要实现来GrantedAuthority成为认可的角色类，user实体里面有list的角色","date":"2022-03-30 17:34:19","docid":0,"fillcolor":"ffffed99","folded":true,"id":15,"markups":[{"date":"2022-03-30 17:34:46","docid":0,"fillcolor":"ffffed99","id":17,"originaltext":"数据库环境准备","page":7,"textblocks":[{"first":[52.35717010498047,358.9033508300781,14.630989074707031,17.5],"last":[140.14308166503906,358.9033508300781,14.6309814453125,17.5],"length":7,"rects":[[52.35717010498047,358.9033508300781,102.4168930053711,17.5]],"start":16,"text":"数据库环境准备"}],"type":5},{"date":"2022-03-30 17:34:51","docid":0,"fillcolor":"ffffed99","id":18,"originaltext":"导入数据库操作相关jar包","page":7,"textblocks":[{"first":[52.35717010498047,413.67578125,14.630989074707031,17.5],"last":[203.98219299316406,413.67578125,14.6309814453125,17.5],"length":13,"rects":[[52.35717010498047,413.67578125,166.2560043334961,17.5]],"start":65,"text":"导入数据库操作相关jar包"}],"type":5},{"date":"2022-03-30 17:34:58","docid":0,"fillcolor":"ffffed99","id":19,"originaltext":"在配置文件中添加数据库操作相关配置","page":7,"textblocks":[{"first":[52.35717010498047,608.755615234375,14.630989074707031,17.5],"last":[286.45294189453125,608.755615234375,14.6309814453125,17.5],"length":17,"rects":[[52.35717010498047,608.755615234375,248.72675323486328,17.5]],"start":82,"text":"在配置文件中添加数据库操作相关配置"}],"type":5},{"content":"跟@Mapper作用哟杨","date":"2022-03-30 20:20:01","docid":0,"fillcolor":"ffffed99","id":21,"originaltext":"在启动类上添加扫描dao接口包注解","page":8,"textblocks":[{"first":[52.357730865478516,422.66094970703125,14.631145477294922,17.5],"last":[269.7143249511719,422.66094970703125,14.6309814453125,17.5],"length":17,"rects":[[52.357730865478516,422.66094970703125,231.98757553100586,17.5]],"start":0,"text":"在启动类上添加扫描dao接口包注解"}],"type":5},{"content":"总结起来认证的方法：\n1、可以加在user用户service服务层上：直接继承UserDetailsService即可\n2、对角色实体和用户实体进行实现对应方法即可\n3、直接继承对应的规范，角色实体继承GrantedAuthority\n4、用户实体继承UserDetails\n\n（实现的方法直接返回角色名即可）\n特别注意：\n对于以后需要将实体转化成对应json字符串需要忽略重写的属性，因为底层其实我们继承了Security的一些实体，属性跟着过来了，最后重写方法而已，所以这些继承来的属性需要进行忽略，处理覆盖掉的账号和密码，其他全部忽略，使用@JsonIgnore忽略","date":"2022-03-30 20:20:29","docid":0,"fillcolor":"ffffed99","id":22,"originaltext":"创建角色pojo对象","page":8,"textblocks":[{"first":[52.36702346801758,611.4763793945312,14.633785247802734,17.5],"last":[157.3820343017578,611.4763793945312,14.633651733398438,17.5],"length":10,"rects":[[52.36702346801758,611.4763793945312,119.64866256713867,17.5]],"start":19,"text":"创建角色pojo对象"}],"type":5},{"content":"前面三个方法：\n返回对应的角色集合、返回用户名、返回密码\n（第一个方法需要橘色实体实现对应方法然后在用户实体建立一个角色list即可返回即可）\n\n\n最后面有4个方法对应：\n账号是否失效、账号是否锁定、密码是否失效、是否可用\n(一般这些方法使用状态来进行更改)\n\n\n","date":"2022-03-30 20:21:01","docid":0,"fillcolor":"ffffed99","id":23,"originaltext":"创建用户pojo对象","page":9,"textblocks":[{"first":[52.35717010498047,494.69842529296875,14.630989074707031,17.5],"last":[157.35362243652344,494.69842529296875,14.6309814453125,17.5],"length":10,"rects":[[52.35717010498047,494.69842529296875,119.62743377685547,17.5]],"start":0,"text":"创建用户pojo对象"}],"type":5},{"date":"2022-03-30 20:22:02","docid":0,"fillcolor":"ffffed99","id":24,"originaltext":"提供角色mapper接口","page":11,"textblocks":[{"first":[52.35717010498047,250.39486694335938,14.630989074707031,19.5],"last":[182.5219268798828,250.39486694335938,14.6309814453125,19.5],"length":12,"rects":[[52.35717010498047,250.39486694335938,144.79573822021484,19.5]],"start":0,"text":"提供角色mapper接口"}],"type":5},{"date":"2022-03-30 20:22:07","docid":0,"fillcolor":"ffffed99","id":25,"originaltext":"提供用户mapper接口","page":11,"textblocks":[{"first":[52.35717010498047,419.2139587402344,14.630989074707031,19.5],"last":[182.5219268798828,419.2139587402344,14.6309814453125,19.5],"length":12,"rects":[[52.35717010498047,419.2139587402344,144.79573822021484,19.5]],"start":16,"text":"提供用户mapper接口"}],"type":5},{"date":"2022-03-30 20:22:12","docid":0,"fillcolor":"ffffed99","id":26,"originaltext":"提供认证service接口","page":11,"textblocks":[{"first":[52.35717010498047,629.3992919921875,14.630989074707031,17.5],"last":[177.02818298339844,629.3992919921875,14.6309814453125,17.5],"length":13,"rects":[[52.35717010498047,629.3992919921875,139.30199432373047,17.5]],"start":32,"text":"提供认证service接口"}],"type":5},{"date":"2022-03-30 20:22:17","docid":0,"fillcolor":"ffffed99","id":27,"originaltext":"提供认证service实现类","page":12,"textblocks":[{"first":[52.357730865478516,57.6915397644043,14.631145477294922,17.578800201416016],"last":[191.65916442871094,57.6915397644043,14.6309814453125,17.578800201416016],"length":14,"rects":[[52.357730865478516,57.6915397644043,153.93241500854492,17.578800201416016]],"start":0,"text":"提供认证service实现类"}],"type":5},{"date":"2022-03-30 20:22:23","docid":0,"fillcolor":"ffffed99","id":28,"originaltext":"在启动类中把加密对象放入IOC容器","page":12,"textblocks":[{"first":[52.35717010498047,292.7840576171875,14.630989074707031,17.5],"last":[268.37127685546875,292.7840576171875,14.6309814453125,17.5],"length":17,"rects":[[52.35717010498047,292.7840576171875,230.64508819580078,17.5]],"start":18,"text":"在启动类中把加密对象放入IOC容器"}],"type":5},{"date":"2022-03-30 20:22:34","docid":0,"fillcolor":"ffffed99","id":29,"originaltext":"修改配置类","page":12,"textblocks":[{"first":[52.35717010498047,515.625244140625,14.630989074707031,17.5],"last":[110.88111877441406,515.625244140625,14.630989074707031,17.5],"length":5,"rects":[[52.35717010498047,515.625244140625,73.15493774414062,17.5]],"start":39,"text":"修改配置类"}],"type":5}],"originaltext":"整合认证第三版【数据库认证】","page":7,"textblocks":[{"first":[52.357730865478516,320.6193542480469,17.06966781616211,20.5],"last":[274.263427734375,320.6193542480469,17.069671630859375,20.5],"length":14,"rects":[[52.357730865478516,320.6193542480469,238.97536849975586,20.5]],"start":0,"text":"整合认证第三版【数据库认证】"}],"type":5},{"content":"直接注解开启对应的一种授权方式即可。\n然后对接口写对应的权限\n因为最开始的时候认证已经把权限放进去了，直接对接口进行授权不用担心","date":"2022-03-30 20:23:11","docid":0,"fillcolor":"ffffed99","folded":true,"id":30,"markups":[{"content":"底层也是有三种授权方式","date":"2022-03-30 20:23:19","docid":0,"fillcolor":"ffffed99","id":31,"originaltext":"在启动类上添加开启方法级的授权注解","page":13,"textblocks":[{"first":[52.35700225830078,476.39398193359375,14.630935668945312,17.5],"last":[286.4520263671875,476.39398193359375,14.630950927734375,17.5],"length":17,"rects":[[52.35700225830078,476.39398193359375,248.7259750366211,17.5]],"start":48,"text":"在启动类上添加开启方法级的授权注解"}],"type":5},{"date":"2022-03-30 20:23:27","docid":0,"fillcolor":"ffffed99","id":32,"originaltext":"在产品处理器类上添加注解","page":14,"textblocks":[{"first":[52.357730865478516,57.25457763671875,14.631145477294922,17.5],"last":[213.3003387451172,57.25457763671875,14.631149291992188,17.5],"length":12,"rects":[[52.357730865478516,57.25457763671875,175.57375717163086,17.5]],"start":0,"text":"在产品处理器类上添加注解"}],"type":5},{"date":"2022-03-30 20:23:31","docid":0,"fillcolor":"ffffed99","id":33,"originaltext":"重启项目测试","page":14,"textblocks":[{"first":[52.378177642822266,347.1992492675781,14.636837005615234,16.5],"last":[125.5623550415039,347.1992492675781,14.636833190917969,16.5],"length":6,"rects":[[52.378177642822266,347.1992492675781,87.82101058959961,16.5]],"start":44,"text":"重启项目测试"}],"type":5}],"originaltext":"整合实现授权功能","page":13,"textblocks":[{"first":[52.35717010498047,440.1963806152344,17.069480895996094,20.5],"last":[171.8435821533203,440.1963806152344,17.069488525390625,20.5],"length":8,"rects":[[52.35717010498047,440.1963806152344,136.55590057373047,20.5]],"start":38,"text":"整合实现授权功能"}],"type":5},{"date":"2022-03-30 20:23:36","docid":0,"fillcolor":"ffffed99","id":34,"originaltext":"指定自定义异常页面","page":14,"textblocks":[{"first":[52.382328033447266,620.0626831054688,14.63827133178711,17.5],"last":[169.48855590820312,620.0626831054688,14.638275146484375,17.5],"length":9,"rects":[[52.382328033447266,620.0626831054688,131.74450302124023,17.5]],"start":67,"text":"指定自定义异常页面"}],"type":5}],"originaltext":"SpringSecurity整合SpringBoot集中式版","page":0,"textblocks":[{"first":[52.357730865478516,81.28668212890625,12.092639923095703,27.5],"last":[441.8962707519531,81.28668212890625,21.94647216796875,27.5],"length":30,"rects":[[52.357730865478516,81.28668212890625,411.48501205444336,27.5]],"start":0,"text":"SpringSecurity整合SpringBoot集中式版"}],"type":5},{"content":"总结：\n总共10项操作\n分为五项配置认证，两项业务认证，三项授权处理","date":"2022-03-30 17:34:40","docid":0,"fillcolor":"ffffed99","folded":false,"id":16,"markups":[{"content":"分布式认证就是单点登录SSO，就是多服务器情况下，做到只要在一个服务器上登录其他服务器可以不进行登录","date":"2022-03-30 22:02:52","docid":0,"fillcolor":"ffffed99","id":37,"originaltext":"分布式认证概念说明","page":15,"textblocks":[{"first":[52.35736846923828,503.18310546875,17.069488525390625,19.5],"last":[188.9132843017578,503.18310546875,17.069488525390625,19.5],"length":9,"rects":[[52.35736846923828,503.18310546875,153.62540435791016,19.5]],"start":53,"text":"分布式认证概念说明"}],"type":5},{"content":"使用token作为令牌，当认证通过的时候就发一个token给客户端，以后不管访问哪个服务器都携带令牌，验证身份\n两大步：\n1、只有一个服务器进行认证，成功即发一个token给客户端\n2、对别的服务器进行验证是否携带正确的token，这样的服务器可以有多个","date":"2022-03-30 22:03:15","docid":0,"fillcolor":"ffffed99","id":38,"originaltext":"分布式认证流程图","page":15,"textblocks":[{"first":[52.35719680786133,578.9344482421875,17.06943130493164,19.5],"last":[171.84324645996094,578.9344482421875,17.069427490234375,19.5],"length":8,"rects":[[52.35719680786133,578.9344482421875,136.55547714233398,19.5]],"start":130,"text":"分布式认证流程图"}],"type":5},{"content":"由上，token的生成攸关重要，所以使用JWT的方式生成token\n\n使用JWT配合RSA保证认证安全","date":"2022-03-30 22:03:28","docid":0,"fillcolor":"ffffed99","folded":false,"id":39,"markups":[{"date":"2022-03-30 22:03:34","docid":0,"fillcolor":"ffffed99","id":40,"markups":[{"content":"头部：指定签名的加密格式（和别的规范信息）\n\n载荷：防止用户的一些信息（用户名、角色、过期时间，注意不可以放密码）\n\n签名：以点. 相连，将头部和载荷使用bease64编码后，再加入盐，最后使用头部指定的加密格式进行加密得到签名\n","date":"2022-03-31 09:00:40","docid":0,"fillcolor":"ffffed99","id":51,"originaltext":"JWT生成的token由三部分组成：","page":16,"textblocks":[{"first":[52.35661315917969,516.9765014648438,3.2285385131835938,13.5],"last":[186.74868774414062,516.9765014648438,9.753890991210938,13.5],"length":18,"rects":[[52.35661315917969,516.9765014648438,144.14596557617188,13.5]],"start":367,"text":"JWT生成的token由三部分组成："}],"type":5}],"originaltext":"概念说明","page":16,"textblocks":[{"first":[52.356689453125,412.71697998046875,14.630851745605469,17.5],"last":[96.2492446899414,412.71697998046875,14.630851745605469,17.5],"length":4,"rects":[[52.356689453125,412.71697998046875,58.523406982421875,17.5]],"start":194,"text":"概念说明"}],"type":5},{"content":"因为JWT生成的token，头部和载荷透明，知道最后加的盐既可以知道token，如果解密也需要知道加的盐，解密的时候大家都可以获得这个盐，那么就不安全，会被伪造。\n所以需要使用到非对称加密\n非对称加密：加密和解密的方式是不一样的，解密不用知道盐是什么既可以解密，进行验证","date":"2022-03-30 22:03:39","docid":0,"fillcolor":"ffffed99","id":41,"originaltext":"JWT生成token的安全性分析","page":16,"textblocks":[{"first":[52.35616683959961,611.51025390625,4.842761993408203,17.5],"last":[224.6818389892578,611.51025390625,14.630706787109375,17.5],"length":16,"rects":[[52.35616683959961,611.51025390625,186.95637893676758,17.5]],"start":529,"text":"JWT生成token的安全性分析"}],"type":5},{"content":"私钥加密：公私都可以解密\n公钥机密：只有私可以解密\n","date":"2022-03-30 22:03:44","docid":0,"fillcolor":"ffffed99","id":42,"originaltext":"非对称加密RSA介绍","page":17,"textblocks":[{"first":[52.357730865478516,57.25457763671875,14.631145477294922,17.5],"last":[167.9547119140625,57.25457763671875,14.6309814453125,17.5],"length":10,"rects":[[52.357730865478516,57.25457763671875,130.22796249389648,17.5]],"start":0,"text":"非对称加密RSA介绍"}],"type":5},{"date":"2022-03-30 22:03:48","docid":0,"fillcolor":"ffffed99","id":43,"originaltext":"JWT相关工具类","page":17,"textblocks":[{"first":[52.3564567565918,221.06639099121094,4.8427886962890625,18.5],"last":[138.34121704101562,221.06639099121094,14.630783081054688,18.5],"length":8,"rects":[[52.3564567565918,221.06639099121094,100.61554336547852,18.5]],"start":187,"text":"JWT相关工具类"}],"type":5},{"date":"2022-03-30 22:03:56","docid":0,"fillcolor":"ffffed99","id":44,"originaltext":"RSA工具类","page":19,"textblocks":[{"first":[52.35717010498047,618.2373046875,9.656452178955078,13.5],"last":[109.43077850341797,618.2373046875,14.630989074707031,13.5],"length":6,"rects":[[52.35717010498047,618.2373046875,71.70459747314453,13.5]],"start":0,"text":"RSA工具类"}],"type":5}],"originaltext":"JWT介绍","page":16,"textblocks":[{"first":[52.35695266723633,374.76055908203125,5.649974822998047,21.538330078125],"last":[101.46458435058594,374.76055908203125,17.06932830810547,21.538330078125],"length":5,"rects":[[52.35695266723633,374.76055908203125,66.17695999145508,21.538330078125]],"start":187,"text":"JWT介绍"}],"type":5},{"date":"2022-03-30 22:04:06","docid":0,"fillcolor":"ffffed99","folded":false,"id":45,"markups":[{"content":"认证两个方法需要重写：\n1、attemptAuthentication\n需要重写实现成Ajax对应的请求\n2、successfulAuthentication\n认证成功后将结果放到了上下文中，并实现rememberMe功能\n需要重写\n\n\n校验需要重写\nBasicAuthenticationFilter的doFilterInternal方法\n重写成使用公钥进行解密","date":"2022-03-30 22:04:13","docid":0,"fillcolor":"ffffed99","id":46,"originaltext":"回顾集中式认证流程","page":21,"textblocks":[{"first":[52.35700225830078,569.01171875,14.630935668945312,17.5],"last":[169.40451049804688,569.01171875,14.630935668945312,17.5],"length":9,"rects":[[52.35700225830078,569.01171875,131.6784439086914,17.5]],"start":96,"text":"回顾集中式认证流程"}],"type":5},{"content":"校验需要重写","date":"2022-03-30 22:04:19","docid":0,"fillcolor":"ffffed99","id":47,"markups":[{"content":"重写方法：\nUsernamePasswordAuthenticationFilter中\n1、attemptAuthentication方法\n2、successfulAuthentication方法","date":"2022-03-31 09:44:03","docid":0,"fillcolor":"ffffed99","id":52,"originaltext":"用户认证：","page":21,"textblocks":[{"first":[74.86569213867188,728.103759765625,9.753898620605469,13.5],"last":[113.88130950927734,728.103759765625,9.753898620605469,13.5],"length":5,"rects":[[74.86569213867188,728.103759765625,48.76951599121094,13.5]],"start":318,"text":"用户认证："}],"type":5},{"content":"重写方法：\nBasicAuthenticationFilter\n1、doFilterInternal","date":"2022-03-31 09:44:09","docid":0,"fillcolor":"ffffed99","id":53,"originaltext":"身份校验：","page":22,"textblocks":[{"first":[74.86637878417969,92.06439208984375,9.753990173339844,12.5],"last":[113.88232421875,92.06439208984375,9.753990173339844,12.5],"length":5,"rects":[[74.86637878417969,92.06439208984375,48.769935607910156,12.5]],"start":95,"text":"身份校验："}],"type":5}],"originaltext":"分析分布式认证流程","page":21,"textblocks":[{"first":[52.356689453125,698.8935546875,14.630851745605469,17.5],"last":[169.40350341796875,698.8935546875,14.630859375,17.5],"length":9,"rects":[[52.356689453125,698.8935546875,131.67767333984375,17.5]],"start":307,"text":"分析分布式认证流程"}],"type":5}],"originaltext":"SpringSecurity+JWT+RSA分布式认证思路分析","page":21,"textblocks":[{"first":[52.35717010498047,506.2895812988281,9.405284881591797,21.498199462890625],"last":[396.4713439941406,506.2895812988281,17.069427490234375,21.498199462890625],"length":31,"rects":[[52.35717010498047,506.2895812988281,361.18360137939453,21.498199462890625]],"start":0,"text":"SpringSecurity+JWT+RSA分布式认证思路分析"}],"type":5},{"content":"总结：\n1、对认证前以及认证后需要做处理","date":"2022-03-30 22:04:24","docid":0,"fillcolor":"ffffed99","folded":false,"id":48,"markups":[{"date":"2022-03-30 22:04:30","docid":0,"fillcolor":"ffffed99","id":49,"originaltext":"创建父工程并导入jar包","page":22,"textblocks":[{"first":[52.35695266723633,203.09466552734375,14.630924224853516,17.5],"last":[189.35043334960938,203.09466552734375,14.63092041015625,17.5],"length":12,"rects":[[52.35695266723633,203.09466552734375,151.6244010925293,17.5]],"start":279,"text":"创建父工程并导入jar包"}],"type":5},{"content":"通过rsa生成公钥和私钥","date":"2022-03-30 22:04:36","docid":0,"fillcolor":"ffffed99","folded":true,"id":50,"markups":[{"date":"2022-03-31 09:54:52","docid":0,"fillcolor":"ffffed99","id":54,"originaltext":"创建通用子模块并导入JWT相关jar包","page":22,"textblocks":[{"first":[52.356544494628906,617.382568359375,12.192115783691406,15.5],"last":[238.16734313964844,617.382568359375,12.192108154296875,15.5],"length":19,"rects":[[52.356544494628906,617.382568359375,198.0029067993164,15.5]],"start":299,"text":"创建通用子模块并导入JWT相关jar包"}],"type":5},{"date":"2022-03-31 10:35:06","docid":0,"fillcolor":"ffffed99","id":55,"originaltext":"导入工具类","page":23,"textblocks":[{"first":[52.35717010498047,696.2274780273438,12.192489624023438,15.5],"last":[101.12712097167969,696.2274780273438,12.192489624023438,15.5],"length":5,"rects":[[52.35717010498047,696.2274780273438,60.962440490722656,15.5]],"start":0,"text":"导入工具类"}],"type":5},{"date":"2022-03-31 10:35:18","docid":0,"fillcolor":"ffffed99","id":56,"originaltext":"在通用子模块中编写测试类生成rsa公钥和私钥","page":24,"textblocks":[{"first":[52.357730865478516,351.8804016113281,12.192623138427734,15.5],"last":[290.78375244140625,351.8804016113281,12.192474365234375,15.5],"length":22,"rects":[[52.357730865478516,351.8804016113281,250.6184959411621,15.5]],"start":0,"text":"在通用子模块中编写测试类生成rsa公钥和私钥"}],"type":5}],"originaltext":"通用模块","page":22,"textblocks":[{"first":[52.35676193237305,589.3416748046875,14.630596160888672,17.5],"last":[96.24854278564453,589.3416748046875,14.630592346191406,17.5],"length":4,"rects":[[52.35676193237305,589.3416748046875,58.52237319946289,17.5]],"start":293,"text":"通用模块"}],"type":5},{"content":"总结：\n1、重写认证前获取Ajax请求的方法\n2、重写认证后产生token的方法，使用到了JWT和RSA\n3、重写验证token方法\n\nRSA（需要写一个properties来读取）：\n（公钥私钥的生成）\n1、直接编写一个测试类使用RSA工具类生成公钥私钥放到对应位置\n2、编写一个从yaml配置文件读取属性的类，使用@ConfigurationProperties读取公钥私钥放置的位置\n3、使用工具类获取对应位置的公钥私钥配置到属性中\n\n（最后经过springSecurityConfigation将过滤器全部放入到里面去，可以删除有关服务）\n\nJWT（只要有即可）：\n1、使用JWT工具类即可\n（重要在公钥私钥的生成）","date":"2022-03-31 10:35:28","docid":0,"fillcolor":"ffffed99","folded":true,"id":57,"markups":[{"date":"2022-03-31 10:35:34","docid":0,"fillcolor":"ffffed99","id":58,"originaltext":"创建认证服务工程并导入jar包","page":24,"textblocks":[{"first":[52.37107467651367,699.2601318359375,12.195575714111328,15.5],"last":[203.14889526367188,699.2601318359375,12.195571899414062,15.5],"length":15,"rects":[[52.37107467651367,699.2601318359375,162.97339248657227,15.5]],"start":64,"text":"创建认证服务工程并导入jar包"}],"type":5},{"date":"2022-03-31 10:35:54","docid":0,"fillcolor":"ffffed99","id":59,"originaltext":"创建认证服务配置文件","page":25,"textblocks":[{"first":[52.35717010498047,492.59381103515625,12.192489624023438,15.5],"last":[162.08956909179688,492.59381103515625,12.192489624023438,15.5],"length":10,"rects":[[52.35717010498047,492.59381103515625,121.92488861083984,15.5]],"start":0,"text":"创建认证服务配置文件"}],"type":5},{"date":"2022-03-31 11:47:41","docid":0,"fillcolor":"ffffed99","id":60,"originaltext":"提供解析公钥和私钥的配置类","page":26,"textblocks":[{"first":[52.35717010498047,74.9744873046875,12.192489624023438,15.5],"last":[198.66702270507812,74.9744873046875,12.192489624023438,15.5],"length":13,"rects":[[52.35717010498047,74.9744873046875,158.5023422241211,15.5]],"start":0,"text":"提供解析公钥和私钥的配置类"}],"type":5},{"date":"2022-03-31 11:47:50","docid":0,"fillcolor":"ffffed99","id":61,"originaltext":"创建认证服务启动类","page":26,"textblocks":[{"first":[52.35717010498047,348.08624267578125,12.192489624023438,15.5],"last":[149.89707946777344,348.08624267578125,12.192489624023438,15.5],"length":9,"rects":[[52.35717010498047,348.08624267578125,109.7323989868164,15.5]],"start":17,"text":"创建认证服务启动类"}],"type":5},{"date":"2022-03-31 11:48:05","docid":0,"fillcolor":"ffffed99","id":63,"originaltext":"将上面集中式案例中数据库认证相关代码复制到认证服务中","page":26,"textblocks":[{"first":[52.35717010498047,511.40423583984375,12.192489624023438,15.5],"last":[357.16949462890625,511.40423583984375,12.192474365234375,15.5],"length":26,"rects":[[52.35717010498047,511.40423583984375,317.00479888916016,15.5]],"start":30,"text":"将上面集中式案例中数据库认证相关代码复制到认证服务中"}],"type":5},{"content":"因为分布式认证更多的是Ajax进行请求，而普通的认证只能就收表单的信息\n所以要重新编写认证前获取请求的Filter过滤器","date":"2022-03-31 11:47:58","docid":0,"fillcolor":"ffffed99","id":62,"originaltext":"编写认证过滤器","page":27,"textblocks":[{"first":[52.357730865478516,56.2532958984375,12.192623138427734,15.5],"last":[125.5134506225586,56.2532958984375,12.192619323730469,15.5],"length":7,"rects":[[52.357730865478516,56.2532958984375,85.34833908081055,15.5]],"start":0,"text":"编写认证过滤器"}],"type":5},{"content":"并且认证过","date":"2022-03-31 14:05:41","docid":0,"fillcolor":"ffffed99","id":64,"originaltext":"编写检验token过滤器","page":28,"textblocks":[{"first":[52.35717010498047,439.6751708984375,12.192489624023438,14.5],"last":[160.88682556152344,439.6751708984375,12.192489624023438,14.5],"length":12,"rects":[[52.35717010498047,439.6751708984375,120.7221450805664,14.5]],"start":0,"text":"编写检验token过滤器"}],"type":5},{"date":"2022-03-31 14:20:48","docid":0,"fillcolor":"ffffed99","id":65,"originaltext":"编写SpringSecurity配置类","page":30,"textblocks":[{"first":[52.35717010498047,141.8998565673828,12.192489624023438,16.5],"last":[189.40374755859375,141.8998565673828,12.192489624023438,16.5],"length":19,"rects":[[52.35717010498047,141.8998565673828,149.23906707763672,16.5]],"start":0,"text":"编写SpringSecurity配置类"}],"type":5}],"originaltext":"认证服务","page":24,"textblocks":[{"first":[52.3712272644043,670.2757568359375,14.63473129272461,17.5],"last":[96.27542114257812,670.2757568359375,14.634727478027344,17.5],"length":4,"rects":[[52.3712272644043,670.2757568359375,58.53892135620117,17.5]],"start":58,"text":"认证服务"}],"type":5},{"content":"将认证服务和过滤器全部下了即可\n直接删了有关于私钥的就可以了","date":"2022-03-31 15:34:46","docid":0,"fillcolor":"ffffed99","folded":false,"id":66,"markups":[{"date":"2022-03-31 16:10:44","docid":0,"fillcolor":"ffffed99","id":67,"originaltext":"创建产品服务并导入jar包","page":32,"textblocks":[{"first":[52.35717010498047,372.00927734375,12.192489624023438,15.5],"last":[178.7118682861328,372.00927734375,12.192489624023438,15.5],"length":13,"rects":[[52.35717010498047,372.00927734375,138.54718780517578,15.5]],"start":62,"text":"创建产品服务并导入jar包"}],"type":5}],"originaltext":"资源服务","page":32,"textblocks":[{"first":[52.357730865478516,292.10614013671875,14.631145477294922,17.5],"last":[96.25115966796875,292.10614013671875,14.631141662597656,17.5],"length":4,"rects":[[52.357730865478516,292.10614013671875,58.52457046508789,17.5]],"start":0,"text":"资源服务"}],"type":5}],"originaltext":"SpringSecurity+JWT+RSA分布式认证实现","page":22,"textblocks":[{"first":[52.35700225830078,165.2061309814453,9.405254364013672,21.4053955078125],"last":[362.3321838378906,165.2061309814453,17.069427490234375,21.4053955078125],"length":29,"rects":[[52.35700225830078,165.2061309814453,327.0446090698242,21.4053955078125]],"start":248,"text":"SpringSecurity+JWT+RSA分布式认证实现"}],"type":5}],"originaltext":"SpringSecurity整合SpringBoot分布式版","page":15,"textblocks":[{"first":[52.35792541503906,460.25628662109375,12.092643737792969,26.62646484375],"last":[441.89654541015625,460.25628662109375,21.94647216796875,26.62646484375],"length":30,"rects":[[52.35792541503906,460.25628662109375,411.48509216308594,26.62646484375]],"start":21,"text":"SpringSecurity整合SpringBoot分布式版"}],"type":5}],"maxid":67,"notelinks":[],"title":"SpringSecurity_day03","unimportant":[]}